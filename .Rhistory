renv::restore()
renv::snapshot()
renv::update()
renv::upgrade()
library(biggr2)
renv::use_python()
renv::status()
renv:snapshot()
renv::snapshot()
rstudioapi::restartSession()
reticulate::py_install(packages = 'boto3')
reticulate::virtualenv_install('boto3')
library(biggr2)
library(biggr2)
reticulate::virtualenv_install('boto3')
renv::use_python()
py_config()
rstudioapi::restartSession()
reticulate::virtualenv_install('boto3')
library(biggr2)
library(biggr2)
library(biggr2)
library(biggr2)
biggr2::keyfile_create('test1')
biggr2::keyfile_create('test1')
library(biggr2)
services <- map(
c('ec2', 's3', 'billing'), client
)
library(purrr)
services <- map(
c('ec2', 's3', 'billing'), client
)
debugonce(client)
services <- map(
c('ec2', 's3', 'billing'), client
)
client(
service,
aws_access_key_id = key_access,
aws_secret_access_key = key_secret,
region_name = region
)
client('ec2')
ec2_client <- client('ec2')
source('~/biggr2/R/services.R')
library(biggr2)
ec2_instance_script()
#' ec2_instance_script
#' @param postgres_password Password for airflow database
#' @param phone_number Number to sent you a ding. Message is pointless and nondescript
#' @param null_user Blank file for nothing to load on server.
#' @return A bash script
#' @export ec2_instance_script
ec2_instance_script <- function(postgres_password = "../../airflow",
phone_number = NA,
null_user = FALSE) {
if (null_user) {
null_user <- paste(
"#!/bin/bash",
"echo 'hello' >> /tmp/tmpfile",
sep = "\n"
)
}
if (is.na(phone_number)) {
phone_number <- 5555555555
} else {
message(
"Once the server is complete, you will receive a default message from textbelt.com"
)
}
user_data <- paste("#!/bin/bash",
# Install R
"echo $'deb https://cloud.r-project.org/bin/linux/ubuntu disco-cran35/' >> /etc/apt/sources.list",
"sudo apt-get update",
"sudo apt-get install r-base -y",
"sudo apt-get install libcurl4-openssl-dev -y",
"sudo apt-get install libgit2-dev -y",
"sudo apt-get install libssl-dev -y",
"sudo apt-get install libssh2-1-dev -y",
"sudo apt-get install gdebi-core",
"sudo apt-get install python3-pip -y",
"sudo apt-get install libpq-dev -y",
"sudo apt-get install libxml2-dev -y",
"sudo /usr/bin/pip3 install virtualenv",
"sudo apt-get install python3-venv",
"wget https://download2.rstudio.org/server/trusty/amd64/rstudio-server-1.2.1335-amd64.deb",
"yes | sudo gdebi rstudio-server-1.2.1335-amd64.deb",
# Load airflow
"sudo apt install postgresql postgresql-contrib -y",
'CONF_FILE=$(find / -name "postgresql.conf" | grep main)',
'PG_FILE=$(find / -name "pg_hba.conf" | grep main)',
'echo "listen_addresses = \'*\'" >> $CONF_FILE',
'echo "host    all             all             0.0.0.0/0               md5" >> $PG_FILE',
'echo "host    all             all             ::/0                    md5" >> $PG_FILE',
'echo "#!/bin/bash" >> /tmp/update_pass',
paste0('echo  "sudo -u postgres -H -- psql -c \\"ALTER USER postgres PASSWORD \'', postgres_password, '\'\\"" >> /tmp/update_pass'),
"sh /tmp/update_pass",
"service postgresql stop",
"service postgresql start",
# Send Notification
paste0(
"/usr/bin/curl -X POST https://textbelt.com/text \\
--data-urlencode phone='", phone_number, "' \\
--data-urlencode message='Find Your Phone!' \\
-d key=textbelt"
),
# Something else
sep = "\n"
)
message(user_data)
user_data
}
#' ec2_instance_script
#' @param postgres_password Password for airflow database
#' @param phone_number Number to sent you a ding. Message is pointless and nondescript
#' @param null_user Blank file for nothing to load on server.
#' @return A bash script
#' @export ec2_instance_script
ec2_instance_script <- function(postgres_password = "../../airflow",
phone_number = NA,
null_user = FALSE) {
user_data <- paste("#!/bin/bash",
# Install R
"echo $'deb https://cloud.r-project.org/bin/linux/ubuntu disco-cran35/' >> /etc/apt/sources.list",
"sudo apt-get update",
"sudo apt-get install r-base -y",
"sudo apt-get install libcurl4-openssl-dev -y",
"sudo apt-get install libgit2-dev -y",
"sudo apt-get install libssl-dev -y",
"sudo apt-get install libssh2-1-dev -y",
"sudo apt-get install gdebi-core",
"sudo apt-get install python3-pip -y",
"sudo apt-get install libpq-dev -y",
"sudo apt-get install libxml2-dev -y",
"sudo /usr/bin/pip3 install virtualenv",
"sudo apt-get install python3-venv",
"wget https://download2.rstudio.org/server/trusty/amd64/rstudio-server-1.2.1335-amd64.deb",
"yes | sudo gdebi rstudio-server-1.2.1335-amd64.deb",
# Load airflow
"sudo apt install postgresql postgresql-contrib -y",
'CONF_FILE=$(find / -name "postgresql.conf" | grep main)',
'PG_FILE=$(find / -name "pg_hba.conf" | grep main)',
'echo "listen_addresses = \'*\'" >> $CONF_FILE',
'echo "host    all             all             0.0.0.0/0               md5" >> $PG_FILE',
'echo "host    all             all             ::/0                    md5" >> $PG_FILE',
'echo "#!/bin/bash" >> /tmp/update_pass',
paste0('echo  "sudo -u postgres -H -- psql -c \\"ALTER USER postgres PASSWORD \'', postgres_password, '\'\\"" >> /tmp/update_pass'),
"sh /tmp/update_pass",
"service postgresql stop",
"service postgresql start",
# Send Notification
paste0(
"/usr/bin/curl -X POST https://textbelt.com/text \\
--data-urlencode phone='", phone_number, "' \\
--data-urlencode message='Find Your Phone!' \\
-d key=textbelt"
),
# Something else
sep = "\n"
)
message(user_data)
user_data
}
ec2_instance_script()
library(biggr2)
resource_ec2
library(biggr2)
library(biggr2)
ec2_instance_create()
library(biggr2)
ec2_instance_create()
client
client("ec2")$create_instances(
client("ec2")$create_instances
a <- client("ec2")
library(biggr2)
library(biggr2)
ec2_instance_create()
debug(ec2_instance_create)
client("ec2")$create_instances(
library(biggr2)
library(biggr2)
ec2_instance_create()
library(biggr2)
ec2_instance_create(InstanceStorage = 100
)
library(biggr2)
library(biggr2)
ec2_instance_create(InstanceStorage = 100)
library(biggr2)
library(biggr2)
ec2_instance_create(InstanceStorage = 100)
x
debugonce(ec2_instance_create)
ec2_instance_create(InstanceStorage = 100)
response
response
jsonlite::toJSON(purrr)
jsonlite::toJSON(response)
library(biggr2)
ec2_instance_create(InstanceStorage = 100)
ec2_instance_create(InstanceStorage = 100, InstanceType = 't2.xlarge')
library(biggr2)
library(biggr2)
ec2_instance_create(InstanceStorage = 100, InstanceType = 't2.xlarge')
library(biggr2)
library(biggr2)
ec2_instance_create(InstanceStorage = 100, InstanceType = 't2.xlarge')
library(biggr2)
library(biggr2)
ec2_instance_create(InstanceStorage = 100, InstanceType = 't2.xlarge')
library(biggr2)
source('~/biggr2/main.R')
user_data
library(biggr2)
source('~/biggr2/main.R')
source('~/biggr2/main.R')
library(biggr2)
source('~/biggr2/main.R')
source('~/biggr2/main.R')
read_file(encode(tmp_location))
library(biggr2)
source('~/biggr2/main.R')
# debugonce(ec2_instance_create)
server <- ec2_instance_create()
server
server$Instances
server$Instances[[`]]`]]
server$Instances[[1]]
names(server$Instances[[1]])
pluck(server$Instances[[1]], "ClientToken")
ec2_instance_script
ec2_instance_create
user_data <- read_file('ubuntuinit.sh')
library(biggr2)
source('~/biggr2/main.R')
source('~/biggr2/main.R')
user_data <- read_file("ubuntuinit.sh")
user_data
cat(user_data)
library(glue)
glue_collapse(
user_data,
"git clone https://github.com/rstudio/shiny-examples.git"
)
glue_collapse(
c(
user_data,
"git clone https://github.com/rstudio/shiny-examples.git"
)
)
source('~/biggr2/main.R')
source('~/biggr2/main.R')
library(biggr2)
user_data <- read_file("ubuntuinit.sh")
glue_collapse(
c(
user_data,
"cd /home/ubuntu && git clone https://github.com/rstudio/shiny-examples.git",
read_file('.Renviron')
)
)
glue_collapse(
c(
user_data,
paste('echo ', read_file('.Renviron'), ">> /home/ubuntu/.Renviron"),
"cd /home/ubuntu && git clone https://github.com/fdrennan/redditstack.git"
)
)
glue_collapse(
c(
user_data,
paste('echo ', read_file('.Renviron'), ">> /home/ubuntu/.Renviron"),
"cd /home/ubuntu && git clone https://github.com/fdrennan/redditstack.git"
)
)
glue_collapse(
c(
user_data,
paste(c('echo ', read_file('.Renviron'), ">> /home/ubuntu/.Renviron")),
"cd /home/ubuntu && git clone https://github.com/fdrennan/redditstack.git"
)
)
glue_collapse(
c(
user_data,
paste0('echo ', read_file('.Renviron'), ">> /home/ubuntu/.Renviron"),
"cd /home/ubuntu && git clone https://github.com/fdrennan/redditstack.git"
)
)
glue_collapse(
c(
user_data,
paste0('echo ', readLines('.Renviron'), ">> /home/ubuntu/.Renviron"),
"cd /home/ubuntu && git clone https://github.com/fdrennan/redditstack.git"
)
)
glue_collapse(
c(
user_data,
paste0('echo ', readLines('.Renviron'), ">> /home/ubuntu/.Renviron", collapse = "\n"),
"cd /home/ubuntu && git clone https://github.com/fdrennan/redditstack.git"
)
)
glue_collapse(
c(
user_data,
paste0('echo ', readLines('.Renviron'), " >> /home/ubuntu/.Renviron", collapse = "\n"),
"cd /home/ubuntu && git clone https://github.com/fdrennan/redditstack.git"
)
)
glue_collapse(
c(
user_data,
paste0('echo ', readLines('.Renviron'), ">> /home/ubuntu/.Renviron", collapse = "\n"),
"cd /home/ubuntu && git clone https://github.com/fdrennan/redditstack.git"
)
)
glue_collapse(
c(
user_data,
paste0('echo ', readLines('.Renviron'), ">> /home/ubuntu/.Renviron", collapse = "\n"),
"cd /home/ubuntu && git clone https://github.com/fdrennan/redditstack.git"
), sep = "\n"
)
library(biggr2)
source('~/biggr2/main.R')
source('~/biggr2/main.R')
library(biggr2)
library(biggr2)
source('~/biggr2/main.R')
